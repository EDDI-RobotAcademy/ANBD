<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="noteMapper">
<insert id="insert" parameterType="NoteVO">
INSERT INTO NOTE (N_BNO, N_SENDER, N_RECEIVER, N_CONTENT, N_S_TIME, N_READ_CHK, N_R_DELETE_CHK, N_S_DELETE_CHK, N_RNO, n_type)
	VALUES(NOTE_SEQ.NEXTVAL, #{n_sender}, #{n_receiver}, #{n_content}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MM:SS'), 1, 1, 1, #{n_rno}, #{n_type})
</insert>


<select id="listPage" resultType="NoteVO" parameterType="java.util.Map">
SELECT N_BNO, N_SENDER, N_RECEIVER, N_CONTENT, N_S_TIME, N_READ_CHK, N_R_DELETE_CHK, N_S_DELETE_CHK, n_rno
FROM(SELECT N_BNO, N_SENDER, N_RECEIVER, N_CONTENT, N_S_TIME, N_READ_CHK, N_R_DELETE_CHK, N_S_DELETE_CHK, n_rno,
	ROW_NUMBER() OVER(ORDER BY N_BNO DESC) AS RNUM  
	FROM NOTE WHERE 1 = 1
<include refid="who"></include>
	) NOTE
WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
ORDER BY N_BNO DESC
</select>

<select id="listCount" parameterType="java.util.Map" resultType="int">
SELECT COUNT(N_BNO) FROM NOTE WHERE 1=1
<include refid="who"></include>
AND N_BNO > 0
</select>

<sql id="who">
	<if test="who == 'receive'.toString()">AND N_RECEIVER = #{id} AND N_R_DELETE_CHK = 1</if>
	<if test="who == 'send'.toString()">AND N_SENDER = #{id} AND N_S_DELETE_CHK = 1</if>
</sql>


<select id="read" parameterType="int" resultType="NoteVO">
SELECT N_BNO, N_RECEIVER, N_SENDER, N_CONTENT, N_S_TIME, N_READ_CHK, N_S_DELETE_CHK, N_R_DELETE_CHK, n_rno, n_type
FROM NOTE WHERE N_BNO = #{n_bno}
</select>

<select id="read_check" parameterType="java.util.Map">
UPDATE NOTE SET N_READ_CHK = 0
WHERE N_BNO = #{n_bno} AND N_RECEIVER = #{id}
</select>

<select id="no_readCount" parameterType="String" resultType="int">
SELECT COUNT(N_BNO) FROM NOTE 
WHERE N_RECEIVER = #{id} AND N_READ_CHK = 1
</select>

<update id="delete_send" parameterType="java.util.ArrayList">
UPDATE NOTE SET N_S_DELETE_CHK = 0
WHERE N_BNO IN(
	<foreach collection="array" item="item" index="index" separator=",">
       #{item}
    </foreach>
)
</update>

<update id="delete_receive" parameterType="java.util.ArrayList">
UPDATE NOTE SET R_DELETE_CHK = 0
WHERE N_BNO IN(
	<foreach collection="array" item="item" index="index" separator=",">
       #{item}
    </foreach>
)
</update>


<delete id="delete_all" parameterType="java.util.ArrayList">
DELETE FROM NOTE WHERE ((N_R_DELETE_CHK = 0 AND N_S_DELETE_CHK = 0) OR (N_SENDER IS NULL AND N_RECEIVER IS NULL))
AND N_BNO IN(
	<foreach collection="array" item="item" index="index" separator=",">
       #{item}
    </foreach>
)
</delete>


<update id="delete_send2" parameterType="int">
UPDATE NOTE SET N_S_DELETE_CHK = 0
WHERE N_BNO = #{n_bno}
</update>

<update id="delete_receive2" parameterType="int">
UPDATE NOTE SET N_R_DELETE_CHK = 0
WHERE N_BNO = #{n_bno}
</update>

<delete id="delete_detail" parameterType="int">
DELETE FROM NOTE WHERE ((N_R_DELETE_CHK = 0 AND N_S_DELETE_CHK = 0) OR (N_SENDER IS NULL AND N_RECEIVER IS NULL))
AND N_BNO = #{n_bno}
</delete>

<select id="get_members" parameterType="java.util.Map" resultType="java.lang.String">
SELECT DISTINCT N_SENDER FROM NOTE WHERE n_rno= #{n_rno} AND N_SENDER != #{id} AND N_TYPE = #{n_type}
</select>


<insert id="send_event" parameterType="java.util.Map">
INSERT INTO NOTE (N_BNO, N_SENDER, N_RECEIVER, N_CONTENT, N_S_TIME, N_READ_CHK, N_R_DELETE_CHK, N_S_DELETE_CHK, N_RNO, n_type)
	VALUES(NOTE_SEQ.NEXTVAL, 'admin', #{n_receiver}, #{n_content}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MM:SS'), 1, 1, 1, #{n_rno}, 'event')

</insert>

<!-- 신고 -->
<insert id="report_insert" parameterType="ComplaintVO">
INSERT INTO COMPLAINT (COM_NUM, ID, C_CONTENT, C_BNO, BOARD_TYPE)
VALUES(COMPLAINT_SEQ.NEXTVAL, #{id}, #{c_content}, #{c_bno}, #{board_type})
</insert>

<select id="report_chk" parameterType="ComplaintVO"  resultType="int">
SELECT COUNT(COM_NUM) FROM COMPLAINT 
WHERE ID = #{id} AND BOARD_TYPE = #{board_type} AND C_BNO= #{c_bno}
</select>


<select id="id_chk" parameterType="java.lang.String"  resultType="int">
SELECT COUNT(ID) FROM A_MEMBER WHERE ID = #{id}
</select>



</mapper>